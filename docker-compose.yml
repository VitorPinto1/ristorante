

services:
  web:
    image: vitorpinto500/restaurant-ilcapo:latest
    platform: linux/amd64
    build: .
    command: >
      sh -c "dockerize -wait tcp://${MYSQL_HOST}:${MYSQL_PORT} -timeout 60s &&
      flask run --host=0.0.0.0"
   
    ports:
      - "8080:5001"
    env_file:
      - .env.development
 
    networks:
      - backend

  mail:
    image: vitorpinto500/restaurant-ilcapo:latest
    platform: linux/amd64
    command: ["python", "mail_service.py"]
    env_file:
      - .env.development
    ports:
      - "2525:587"
    networks:
      - backend

  mongo:
    image: mongo:6.0
    container_name: mongodb_restaurant
    platform: linux/amd64
    restart: always
    ports:
      - "29000:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db
    networks:
      - backend

  mysql:
    image: mysql:8.0
    container_name: mysql_restaurant
    platform: linux/amd64
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "13306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend

networks:
  backend:
    driver: bridge


volumes:
  mongo_data:
  mysql_data:
